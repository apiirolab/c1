#import BpmnProcessInstance, BpmnProcessInstanceStatus from '../../generated/prisma.graphql'

# ========================================================= #
#  Types
# ========================================================= # */

type BpmnProcessInstance {
  id: ID! @unique
  comments: [Comment!]!
  dateFinished: DateTime
  dateStarted: DateTime!
  duration: Int
  ownerId: ID!
  owner: User @relation(name: "UserProcesses")
  processId: ID!
  process: BpmnProcess @relation(name: "BpmnProcessInstanceProcess")
  data: String!
  log: [Log!]! @relation(name: "BpmnProcessInstanceLog", onDelete: CASCADE)
  status: BpmnProcessInstanceStatus!
  tasks: [BpmnTaskInstance!]! @relation(name: "BpmnProcessInstanceTasks", onDelete: CASCADE)
}

# ========================================================= #
#  Queries
# ========================================================= # */

input BpmnProcessInstancesInput {
  status: BpmnProcessInstanceStatus
  name: String
  dateStarted: DateTime
  dateFinished: DateTime
  duration: Int
  processId: String
  skip: Int
  first: Int
}

type Query {
  bpmnProcessInstancesQuery(input: BpmnProcessInstancesInput!): [BpmnProcessInstance]!
  bpmnProcessInstanceQuery(id: String!): BpmnProcessInstance
}

# ========================================================= #
#  MUTATIONS
# ========================================================= # */

type BpmnProcessInstanceOutput {
  activeElements: [String!]!
  executedElements: [String!]!
  processInstance: BpmnProcessInstance
}

input LaunchProcessInstanceInput {
  processId: String!
  role: String!
}

input DuplicateProcessInstanceInput {
  processId: String!
}

input SetProcessInstanceStatusInput {
  processId: String!
  status: BpmnProcessInstanceStatus!
}

type Mutation {
  launchProcessInstance(input: LaunchProcessInstanceInput!): BpmnProcessInstanceOutput
  duplicateProcessInstance(input: DuplicateProcessInstanceInput!): BpmnProcessInstanceOutput
  setProcessInstanceStatus(input: SetProcessInstanceStatusInput!): BpmnProcessInstanceOutput
}
