{"version":3,"sources":["/src/luis.ts","/src/client/modules/home/tests/example.test.tsx"],"names":[],"mappings":";;;;;;AAAA,+CAA+C;AAC/C,+CAA+C;AAC/C,4DAA4D;;AAE5D,+BAAmD;AAEnD,MAAM,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC1C,MAAM,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAEzC,sBAAe,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAEpC,oDAAkD;AAElD,iBAAU,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbb,+BAA+B;AAE/B,gDAAgD;AAEhD,OAAO,CACL,uBAAuB,EACvB;IACE,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,IAAI,SAAS;QACX,wBAAwB;QACxB,OAAO,+CAAsB,CAAC;IAChC,CAAC;CACF,EACD,IAAI,CAAC,EAAE;IACL,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;QAChB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAE5B,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAE5B,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;QACf,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;AACL,CAAC,CACF,CAAC","file":"","sourcesContent":["// import * as BarTest from './tests/Bar.test';\n// import * as FooTest from './tests/Foo.test';\n// import * as ComponentsTest from './tests/Component.test';\n\nimport { renderLuis, setupTestBridge } from 'luis';\n\nconst summary = require('./summary.json');\nconst snapshots = require('./snapshots');\n\nsetupTestBridge(summary, snapshots);\n\nimport './client/modules/home/tests/example.test';\n\nrenderLuis();\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as renderer from 'react-test-renderer';\n\nstoryOf(\n  'Component 2 With Test',\n  {\n    foo: 2,\n    bar: 3,\n    get component() {\n      // just another notation\n      return <div>My Tested 2</div>;\n    }\n  },\n  data => {\n    it('passes', () => {\n      expect(data.foo).toEqual(2);\n\n      const component = renderer.create(data.component);\n      const root = component.root;\n\n      expect(component).toMatchSnapshot();\n    });\n\n    it('fails', () => {\n      expect(data.bar).toEqual(3);\n    });\n  }\n);\n"]}